import clsx from "clsx";
import { GetServerSidePropsContext } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useContext, useEffect, useState } from "react";
import { useInView } from "react-intersection-observer";
import { ChevronLeftIcon } from "@heroicons/react/solid";
import Page from "../../components/Page";
import { PlaylistContext } from "../../context/PlaylistContext";
import { Playlist } from "../../types/Playlist";

interface Exercise {
  id: string;
  number: string;
  sets: number;
  reps: number;
  name: string;
}

const Playlist = () => {
  const router = useRouter();
  const [playlist, setPlaylist] = useState<Playlist>();
  const { ref, inView, entry } = useInView({
    initialInView: true,
    threshold: 0.8,
  });
  const { playlists, addExercise } = useContext(PlaylistContext);

  useEffect(() => {
    setPlaylist(playlists.find((playlist) => playlist.id === router.query.id));
  }, [playlists]);

  return (
    <Page>
      <Head>
        <title>{playlist?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Page.Header>
        <div
          ref={ref}
          className="p-10 w-full flex items-center bg-gradient-to-b from-blue-700 via-[#192ea9] to-dark z-10 text-3xl font-bold text-white transition-all"
        >
          <div className="transition-all p-6 space-x-2 flex">
            <span>{playlist?.icon} </span>
            <h1 className="">{playlist?.name}</h1>
          </div>
        </div>

        <div
          className={clsx(
            "p-4 w-full flex items-center bg-[#192ea9] justify-start text-lg font-bold transition-all z-10 fixed top-0 text-white space-x-4",
            inView ? "bg-opacity-0" : "bg-opacity-100"
          )}
        >
          <ChevronLeftIcon
            className="w-8 h-8 p-1 rounded-full bg-black bg-opacity-70 cursor-pointer hover:opacity-50 transition-opacity"
            onClick={() => router.back()}
          />
          <h1 className={clsx(inView ? "opacity-0" : "opacity-100")}>
            {playlist?.name}
          </h1>
        </div>
      </Page.Header>
      <div className="sticky top-16 p-4 mb-2 grid grid-cols-[1fr_8fr_2fr_2fr_2fr] z-10 bg-dark border-b border-gray-300 border-opacity-10 text-white">
        <span>#</span>
        <span>Exercise</span>
        <span className="text-center">Weight</span>
        <span className="text-center">Sets</span>
        <span className="text-center">Reps</span>
      </div>
      <Page.Body>
        <div className="flex flex-col items-center justify-center w-full gap-y-6 text-white">
          {playlist?.exercises.map((exercise, index) => {
            return (
              <div
                className="grid grid-cols-[1fr_8fr_2fr_2fr_2fr] w-full"
                key={exercise.id}
              >
                <span className="self-center">{index + 1}</span>
                <span className="self-center">{exercise.name}</span>
                <span className="self-center text-center">
                  {exercise.weight} kg
                </span>
                <span className="self-center text-center">{exercise.sets}</span>
                <span className="self-center  text-center">
                  {exercise.reps}
                </span>
              </div>
            );
          })}
          <button
            className="mt-8 bg-card w-72 p-6 rounded text-white font-bold hover:opacity-80 hover:bg-warmGray-700 duration-300"
            onClick={() =>
              addExercise({
                name: "Exercise",
                reps: 10,
                sets: 4,
                weight: 5,
                playlistId: "37759a01-ae86-4292-96fd-c0259628d581",
              })
            }
          >
            Add exercise
          </button>
        </div>
      </Page.Body>

      <div className="h-screen"> </div>
      <div className="h-screen"></div>
    </Page>
  );
};

export default Playlist;
